{"ast":null,"code":"var _jsxFileName = \"/Users/rubyosborne/MechProjectsFrontend/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useHistory } from 'react-router-dom';\nimport Resizer from \"react-image-file-resizer\";\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  var _user$result3;\n\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: [],\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: [],\n      selectedFile: ''\n    });\n  };\n\n  useEffect(() => {\n    if (!(post === null || post === void 0 ? void 0 : post.title)) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name\n      }, history));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name\n      }));\n      clear();\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name)) {\n    return /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Please Sign In to create your own projects and like other's projects.\"));\n  }\n\n  async function makeBlob(base64) {\n    const blob = await fetch(base64).then(res => res.blob());\n    resizeImage(blob);\n  }\n\n  const resizeImage = blob => {\n    if (blob) {\n      try {\n        Resizer.imageFileResizer(blob, 700, 500, \"WEBP\", 100, 0, uri => {\n          setPostData({ ...postData,\n            selectedFile: uri\n          });\n        }, \"base64\");\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post === null || post === void 0 ? void 0 : post.title}\"` : 'Creating a Project'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    variant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '5px 0',\n      width: '94%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => makeBlob(base64),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    style: {\n      backgroundColor: \"#c721dd\",\n      color: \"#f4f4f4\"\n    },\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    style: {\n      color: \"#757373\"\n    },\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/rubyosborne/MechProjectsFrontend/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useHistory","Resizer","createPost","updatePost","useStyles","Form","currentId","setCurrentId","postData","setPostData","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","history","clear","handleSubmit","e","preventDefault","name","result","paper","makeBlob","base64","blob","fetch","then","res","resizeImage","imageFileResizer","uri","err","console","log","root","form","target","value","padding","width","fileInput","buttonSubmit","backgroundColor","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,KAAxC,QAAqD,mBAArD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,qBAAvC;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAiC;AAAA;;AAC5C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC;AAAEmB,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,OAAO,EAAE,EAAtB;AAA0BC,IAAAA,IAAI,EAAE,EAAhC;AAAoCC,IAAAA,YAAY,EAAE;AAAlD,GAAD,CAAxC;AACA,QAAMC,IAAI,GAAGhB,WAAW,CAAEiB,KAAD,IAAYT,SAAS,GAAGS,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBC,IAAlB,CAAwBN,OAAD,IAAaA,OAAO,CAACO,GAAR,KAAgBZ,SAApD,CAAH,GAAoE,IAA1F,CAAxB;AACA,QAAMa,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAMiB,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;AACA,QAAMC,OAAO,GAAG1B,UAAU,EAA1B;;AAEA,QAAM2B,KAAK,GAAG,MAAM;AAClBpB,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACAE,IAAAA,WAAW,CAAC;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,OAAO,EAAE,EAAtB;AAA0BC,MAAAA,IAAI,EAAE,EAAhC;AAAoCC,MAAAA,YAAY,EAAE;AAAlD,KAAD,CAAX;AACD,GAHD;;AAKArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,EAACsB,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEJ,KAAP,CAAJ,EAAkBiB,KAAK;AACvB,QAAIb,IAAJ,EAAUL,WAAW,CAACK,IAAD,CAAX;AACX,GAHQ,EAGN,CAACA,IAAD,CAHM,CAAT;;AAKA,QAAMc,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;;AAEA,QAAIxB,SAAS,KAAK,CAAlB,EAAqB;AAAA;;AACnBa,MAAAA,QAAQ,CAACjB,UAAU,CAAC,EAAE,GAAGM,QAAL;AAAeuB,QAAAA,IAAI,EAAEV,IAAF,aAAEA,IAAF,uCAAEA,IAAI,CAAEW,MAAR,iDAAE,aAAcD;AAAnC,OAAD,EAA4CL,OAA5C,CAAX,CAAR;AACAC,MAAAA,KAAK;AACN,KAHD,MAGO;AAAA;;AACLR,MAAAA,QAAQ,CAAChB,UAAU,CAACG,SAAD,EAAY,EAAE,GAAGE,QAAL;AAAeuB,QAAAA,IAAI,EAAEV,IAAF,aAAEA,IAAF,wCAAEA,IAAI,CAAEW,MAAR,kDAAE,cAAcD;AAAnC,OAAZ,CAAX,CAAR;AACAJ,MAAAA,KAAK;AACN;AACF,GAVD;;AAYA,MAAI,EAACN,IAAD,aAACA,IAAD,wCAACA,IAAI,CAAEW,MAAP,kDAAC,cAAcD,IAAf,CAAJ,EAAyB;AACvB,wBACE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEX,OAAO,CAACa,KAA1B;AAAiC,MAAA,SAAS,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EADF,CADF;AAOD;;AAIH,iBAAeC,QAAf,CAAwBC,MAAxB,EAA+B;AAC7B,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,MAAD,CAAL,CAAcG,IAAd,CAAoBC,GAAD,IAASA,GAAG,CAACH,IAAJ,EAA5B,CAAnB;AACAI,IAAAA,WAAW,CAACJ,IAAD,CAAX;AACD;;AAEA,QAAMI,WAAW,GAAIJ,IAAD,IAAU;AAC7B,QAAIA,IAAJ,EAAU;AACR,UAAI;AACFnC,QAAAA,OAAO,CAACwC,gBAAR,CACEL,IADF,EAEE,GAFF,EAGE,GAHF,EAIE,MAJF,EAKE,GALF,EAME,CANF,EAOGM,GAAD,IAAS;AACPjC,UAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeK,YAAAA,YAAY,EAAE6B;AAA7B,WAAD,CAAX;AACD,SATH,EAUE,QAVF;AAYD,OAbD,CAaE,OAAOC,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;AACF,GAnBA;;AAsBC,sBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEvB,OAAO,CAACa,KAA1B;AAAiC,IAAA,SAAS,EAAE,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,UAAU,MAAnC;AAAoC,IAAA,SAAS,EAAG,GAAEb,OAAO,CAAC0B,IAAK,IAAG1B,OAAO,CAAC2B,IAAK,EAA/E;AAAkF,IAAA,QAAQ,EAAEnB,YAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BtB,SAAS,GAAI,YAAWQ,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEJ,KAAM,GAA3B,GAAgC,oBAAnE,CADF,eAEE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,OAAO,EAAC,UAAhC;AAA2C,IAAA,KAAK,EAAC,OAAjD;AAAyD,IAAA,SAAS,MAAlE;AAAmE,IAAA,KAAK,EAAEF,QAAQ,CAACE,KAAnF;AAA0F,IAAA,QAAQ,EAAGmB,CAAD,IAAOpB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeE,MAAAA,KAAK,EAAEmB,CAAC,CAACmB,MAAF,CAASC;AAA/B,KAAD,CAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAC,UAAlC;AAA6C,IAAA,KAAK,EAAC,SAAnD;AAA6D,IAAA,SAAS,MAAtE;AAAuE,IAAA,SAAS,MAAhF;AAAiF,IAAA,IAAI,EAAE,CAAvF;AAA0F,IAAA,KAAK,EAAEzC,QAAQ,CAACG,OAA1G;AAAmH,IAAA,QAAQ,EAAGkB,CAAD,IAAOpB,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAeG,MAAAA,OAAO,EAAEkB,CAAC,CAACmB,MAAF,CAASC;AAAjC,KAAD,CAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,OAAX;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAME;AAAK,IAAA,SAAS,EAAE/B,OAAO,CAACgC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAmC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,MAAf;AAAsB,IAAA,QAAQ,EAAE,KAAhC;AAAuC,IAAA,MAAM,EAAG,CAAC;AAAEjB,MAAAA;AAAF,KAAD,KAAgBD,QAAQ,CAACC,MAAD,CAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAnC,CANF,eAOE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEf,OAAO,CAACiC,YAA3B;AAAyC,IAAA,OAAO,EAAC,WAAjD;AAA6D,IAAA,KAAK,EAAG;AAACC,MAAAA,eAAe,EAAC,SAAjB;AAA4BC,MAAAA,KAAK,EAAE;AAAnC,KAArE;AAAoH,IAAA,IAAI,EAAC,OAAzH;AAAiI,IAAA,IAAI,EAAC,QAAtI;AAA+I,IAAA,SAAS,MAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAG;AAACA,MAAAA,KAAK,EAAC;AAAP,KAApC;AAAuD,IAAA,IAAI,EAAC,OAA5D;AAAoE,IAAA,OAAO,EAAE5B,KAA7E;AAAoF,IAAA,SAAS,MAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CADF,CADF;AAcD,CAnFD;;AAqFA,eAAetB,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useHistory } from 'react-router-dom';\nimport Resizer from \"react-image-file-resizer\";\n\nimport { createPost, updatePost } from '../../actions/posts';\nimport useStyles from './styles';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({ title: '', message: '', tags: [], selectedFile: '' });\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const history = useHistory();\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({ title: '', message: '', tags: [], selectedFile: '' });\n  };\n\n  useEffect(() => {\n    if (!post?.title) clear();\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n      clear();\n    }\n  };\n\n  if (!user?.result?.name) {\n    return (\n      <Paper className={classes.paper} elevation={6}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own projects and like other's projects.\n        </Typography>\n      </Paper>\n    );\n  }\n\n\n\nasync function makeBlob(base64){\n  const blob = await fetch(base64).then((res) => res.blob());\n  resizeImage(blob);\n}\n\n const resizeImage = (blob) => {\n  if (blob) {\n    try {\n      Resizer.imageFileResizer(\n        blob,\n        700,\n        500,\n        \"WEBP\",\n        100,\n        0,\n        (uri) => {\n          setPostData({ ...postData, selectedFile: uri })\n        },\n        \"base64\",\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n  \n\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n        <Typography variant=\"h6\">{currentId ? `Editing \"${post?.title}\"` : 'Creating a Project'}</Typography>\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <div style={{ padding: '5px 0', width: '94%' }}>\n        </div>\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={ ({ base64 }) => makeBlob(base64)} /></div>\n        <Button className={classes.buttonSubmit} variant=\"contained\" style ={{backgroundColor:\"#c721dd\", color: \"#f4f4f4\"}} size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" style ={{color:\"#757373\"}} size=\"small\" onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}