{"ast":null,"code":"import axios from'axios';var API=axios.create({baseURL:\"http://mechprojects.online:5000\",withCredentials:false,headers:{'Access-Control-Allow-Origin':'*','Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS'}});API.interceptors.request.use(function(req){if(localStorage.getItem('profile')){req.headers.Authorization=\"Bearer \".concat(JSON.parse(localStorage.getItem('profile')).token);}return req;});export var fetchPost=function fetchPost(id){return API.get(\"/posts/\".concat(id));};export var fetchPosts=function fetchPosts(page){return API.get(\"/posts?page=\".concat(page));};export var fetchPostsByCreator=function fetchPostsByCreator(name){return API.get(\"/posts/creator?name=\".concat(name));};export var fetchPostsBySearch=function fetchPostsBySearch(searchQuery){return API.get(\"/posts/search?searchQuery=\".concat(searchQuery.search||'none',\"&tags=\").concat(searchQuery.tags));};export var createPost=function createPost(newPost){return API.post('/posts',newPost);};export var likePost=function likePost(id){return API.patch(\"/posts/\".concat(id,\"/likePost\"));};export var comment=function comment(value,id){return API.post(\"/posts/\".concat(id,\"/commentPost\"),{value:value});};export var updatePost=function updatePost(id,updatedPost){return API.patch(\"/posts/\".concat(id),updatedPost);};export var deletePost=function deletePost(id){return API.delete(\"/posts/\".concat(id));};export var signIn=function signIn(formData){return API.post('/user/signin',formData);};export var signUp=function signUp(formData){return API.post('/user/signup',formData);};","map":{"version":3,"sources":["/Users/rubyosborne/forreal/client/src/api/index.js"],"names":["axios","API","create","baseURL","withCredentials","headers","interceptors","request","use","req","localStorage","getItem","Authorization","JSON","parse","token","fetchPost","id","get","fetchPosts","page","fetchPostsByCreator","name","fetchPostsBySearch","searchQuery","search","tags","createPost","newPost","post","likePost","patch","comment","value","updatePost","updatedPost","deletePost","delete","signIn","formData","signUp"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAGD,KAAK,CAACE,MAAN,CAAa,CACvBC,OAAO,CAAE,iCADc,CAEvBC,eAAe,CAAE,KAFM,CAGvBC,OAAO,CAAE,CACP,8BAAgC,GADzB,CAEP,+BAA+B,mCAFxB,CAHc,CAAb,CAAZ,CASAJ,GAAG,CAACK,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6B,SAACC,GAAD,CAAS,CACpC,GAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,CAAqC,CACnCF,GAAG,CAACJ,OAAJ,CAAYO,aAAZ,kBAAsCC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CI,KAAlF,EACD,CAED,MAAON,CAAAA,GAAP,CACD,CAND,EAQA,MAAO,IAAMO,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,EAAD,QAAQhB,CAAAA,GAAG,CAACiB,GAAJ,kBAAkBD,EAAlB,EAAR,EAAlB,CACP,MAAO,IAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,QAAUnB,CAAAA,GAAG,CAACiB,GAAJ,uBAAuBE,IAAvB,EAAV,EAAnB,CACP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,IAAD,QAAUrB,CAAAA,GAAG,CAACiB,GAAJ,+BAA+BI,IAA/B,EAAV,EAA5B,CACP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,WAAD,QAAiBvB,CAAAA,GAAG,CAACiB,GAAJ,qCAAqCM,WAAW,CAACC,MAAZ,EAAsB,MAA3D,kBAA0ED,WAAW,CAACE,IAAtF,EAAjB,EAA3B,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,OAAD,QAAa3B,CAAAA,GAAG,CAAC4B,IAAJ,CAAS,QAAT,CAAmBD,OAAnB,CAAb,EAAnB,CACP,MAAO,IAAME,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACb,EAAD,QAAQhB,CAAAA,GAAG,CAAC8B,KAAJ,kBAAoBd,EAApB,cAAR,EAAjB,CACP,MAAO,IAAMe,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQhB,EAAR,QAAehB,CAAAA,GAAG,CAAC4B,IAAJ,kBAAmBZ,EAAnB,iBAAqC,CAAEgB,KAAK,CAALA,KAAF,CAArC,CAAf,EAAhB,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACjB,EAAD,CAAKkB,WAAL,QAAqBlC,CAAAA,GAAG,CAAC8B,KAAJ,kBAAoBd,EAApB,EAA0BkB,WAA1B,CAArB,EAAnB,CACP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACnB,EAAD,QAAQhB,CAAAA,GAAG,CAACoC,MAAJ,kBAAqBpB,EAArB,EAAR,EAAnB,CAEP,MAAO,IAAMqB,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,QAAD,QAActC,CAAAA,GAAG,CAAC4B,IAAJ,CAAS,cAAT,CAAyBU,QAAzB,CAAd,EAAf,CACP,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACD,QAAD,QAActC,CAAAA,GAAG,CAAC4B,IAAJ,CAAS,cAAT,CAAyBU,QAAzB,CAAd,EAAf","sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: \"http://mechprojects.online:5000\",\n  withCredentials: false,\n  headers: {\n    'Access-Control-Allow-Origin' : '*',\n    'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n  }\n});\n\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\n\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\nexport const fetchPostsByCreator = (name) => API.get(`/posts/creator?name=${name}`);\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, { value });\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);\n"]},"metadata":{},"sourceType":"module"}